p
    | Diagrams: <a href="http://rxmarbles.com/">http://rxmarbles.com/</a>
    br
    | Official docs: <a href="http://reactivex.io/rxjs/manual/overview.html#introduction">http://reactivex.io/rxjs/manual/overview.html#introduction</a>
p
    | First:
    input(type="text", name="first")
    input(type="button", id="completeFirst", value="Complete")
    br
    | Second:
    input(type="text", name="second")
    input(type="button", id="completeSecond", value="Complete")


h2 Combination operators

h3((click)="toggleImage($event);") combineLatest
img.diagram(src="https://rxjs-dev.firebaseapp.com/assets/images/marble-diagrams/combineLatest.png")
span(*ngFor="let item of combineLatest") {{ item }}
p When any observable emits a value, emit the last emitted value from each

h2
    a(href="https://rxjs-dev.firebaseapp.com/api", target="_blank") RxJS API

p
    b
        a(href="http://rxmarbles.com/#switchMap", target="_blank") SwitchMap:
    span(*ngFor="let item of switchMap") [{{ item }}]
    br
    | On each emission the first inner observable is CANCELED and the second observable is subscribed (For example if you don't need data from first one: fromEvent, timer...)

p
    b
        a(href="http://rxmarbles.com/#mergeMap" target="_blank") FlatMap
    |  (mergeMap):
    span(*ngFor="let item of flatMap") [{{ item }}]
    br
    | Combines a second observable into a single stream with first (do <span style="color: red; font-weight: bold;">sequentially</span>). Emits both values when second observer has emitted after first.

p
    b
        a(href="http://rxmarbles.com/#merge", target="_blank") Merge:
    span(*ngFor="let item of merge") {{ item }}
    br
    | Emit events from both observabels

p
    b
        a(href="http://rxmarbles.com/#concat" target="_blank") Concat:
    span(*ngFor="let item of concat") {{ item }}
    br
    | Emit events from first observable and second observable (but only after first is completed)

p
    b ForkJoin:
    span(*ngFor="let item of forkJoin") {{ item }}
    br
    | When all observables complete, emit the last emitted value from each, equvalent to Promise.all (do in <span style="color: red; font-weight: bold;">parallel</span>) (https://www.learnrxjs.io/operators/combination/forkjoin.html)

